name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  RUST_TOOLCHAIN_VERSION: nightly-2023-06-01

jobs:
  format:
    name: Check Formatting
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install Erlang/OTP
        uses: erlef/setup-beam@v1
        with:
          otp-version: 25.1.0
          rebar3-version: '3.18.0'

      - name: Cache Hex packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/rebar3/hex/hexpm/packages
          key: ${{ runner.os }}-hex-${{ hashFiles(format('{0}{1}', github.workspace, '/rebar.lock')) }}
          restore-keys: |
            ${{ runner.os }}-hex-

      - name: Check Formatting with erlfmt
        run: rebar3 fmt --check

  ct:
    name: Run Common Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Cache Rust crates
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: test-native-${{ runner.os }}-${{ env.RUST_TOOLCHAIN_VERSION }}-${{ hashFiles('native/**/Cargo.lock') }}
          restore-keys: |
            test-native-${{ runner.os }}-${{ env.RUST_TOOLCHAIN_VERSION }}

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: "${{ env.RUST_TOOLCHAIN_VERSION }}"

      - name: Install Erlang/OTP
        uses: erlef/setup-beam@v1
        with:
          otp-version: 25.1.0
          rebar3-version: '3.18.0'

      - name: Cache Hex packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/rebar3/hex/hexpm/packages
          key: ${{ runner.os }}-hex-${{ hashFiles(format('{0}{1}', github.workspace, '/rebar.lock')) }}
          restore-keys: |
            ${{ runner.os }}-hex-

      - name: Compile
        run: rebar3 compile

      - name: Run tests
        run: rebar3 ct

  dialyzer:
    name: Run Dialyzer
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install Erlang/OTP
        uses: erlef/setup-beam@v1
        with:
          otp-version: 25.1.0
          rebar3-version: '3.18.0'

      - name: Cache Hex packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/rebar3/hex/hexpm/packages
          key: ${{ runner.os }}-hex-${{ hashFiles(format('{0}{1}', github.workspace, '/rebar.lock')) }}
          restore-keys: |
            ${{ runner.os }}-hex-

      - name: Compile
        run: rebar3 compile

      - name: Run dialyzer
        run: rebar3 dialyzer

  docbuild_test:
    name: Test Generate the Docs
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Cache Rust crates
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: test-native-${{ runner.os }}-${{ env.RUST_TOOLCHAIN_VERSION }}-${{ hashFiles('native/**/Cargo.lock') }}
          restore-keys: |
            test-native-${{ runner.os }}-${{ env.RUST_TOOLCHAIN_VERSION }}

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: "${{ env.RUST_TOOLCHAIN_VERSION }}"

      - name: Install Erlang/OTP
        uses: erlef/setup-beam@v1
        with:
          otp-version: 25.1.0
          rebar3-version: '3.18.0'

      - name: Cache Hex packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/rebar3/hex/hexpm/packages
          key: ${{ runner.os }}-hex-${{ hashFiles(format('{0}{1}', github.workspace, '/rebar.lock')) }}
          restore-keys: |
            ${{ runner.os }}-hex-

      - name: Compile
        run: rebar3 compile

      - name: Generate Docs
        run: rebar3 ex_doc
